#BlueJ class context
comment0.target=Ball
comment1.params=x\ y\ radius\ vx\ vy\ canvasWidth\ canvasHeight
comment1.target=Ball(double,\ double,\ double,\ double,\ double,\ double,\ double)
comment1.text=\r\n\ Create\ a\ Ball.\r\n
comment10.params=value\ min\ max
comment10.target=double\ clamp(double,\ double,\ double)
comment11.params=
comment11.target=void\ invertVerticalVelocity()
comment11.text=\r\n\ Inverts\ the\ ball's\ vertical\ velocity.\r\n
comment12.params=newYRatio
comment12.target=void\ setYRatio(double)
comment12.text=\r\n\ Sets\ the\ ball's\ yRatio\ to\ a\ new\ value.\r\n
comment13.params=canvasWidth
comment13.target=double\ getEffectiveSpeed(double)
comment14.params=canvasWidth
comment14.target=double\ getEffectiveVx(double)
comment15.params=canvasWidth
comment15.target=double\ getEffectiveVy(double)
comment15.text=\r\n\ Returns\ the\ effective\ vertical\ velocity\ in\ pixels\ per\ update,\r\n\ based\ on\ the\ current\ canvas\ width.\r\n
comment16.params=
comment16.target=double\ getBaseVx()
comment16.text=\r\n\ Returns\ the\ ball's\ base\ horizontal\ velocity\ (in\ pixels\ per\ update)\r\n\ based\ on\ the\ REFERENCE_WIDTH.\r\n
comment17.params=
comment17.target=double\ getBaseVy()
comment17.text=\r\n\ Returns\ the\ ball's\ base\ vertical\ velocity\ (in\ pixels\ per\ update)\r\n\ based\ on\ the\ REFERENCE_WIDTH.\r\n
comment2.params=canvasWidth\ canvasHeight
comment2.target=void\ update(double,\ double)
comment2.text=\r\n\ Updates\ the\ ball's\ position\ and\ handles\ bouncing\ off\ the\ walls.\r\n
comment3.params=gc\ canvasWidth\ canvasHeight
comment3.target=void\ draw(javafx.scene.canvas.GraphicsContext,\ double,\ double)
comment3.text=\r\n\ Draws\ the\ ball\ on\ the\ canvas.\r\n
comment4.params=canvasWidth
comment4.target=double\ getRadius(double)
comment4.text=\r\n\ Returns\ the\ effective\ absolute\ radius\ \ based\ on\ the\ current\ canvas\ width\r\n
comment5.params=percentage
comment5.target=void\ increaseSpeed(double)
comment5.text=\r\n\ Increases\ the\ ball's\ speed\ by\ a\ given\ percentage.\r\n
comment6.params=canvasHeight
comment6.target=double\ getY(double)
comment6.text=\r\n\ Returns\ the\ ball's\ absolute\ y\ position\r\n
comment7.params=canvasWidth
comment7.target=double\ getX(double)
comment7.text=\r\n\ Returns\ the\ ball's\ absolute\ x\ position\r\n
comment8.params=x\ y\ vx\ vy\ canvasWidth\ canvasHeight
comment8.target=void\ reset(double,\ double,\ double,\ double,\ double,\ double)
comment8.text=\r\n\ Resets\ the\ ball's\ position\ and\ velocity.\r\n
comment9.params=rectX\ rectY\ rectWidth\ rectHeight\ canvasWidth\ canvasHeight
comment9.target=boolean\ collidesWith(double,\ double,\ double,\ double,\ double,\ double)
comment9.text=\r\n\ Checks\ for\ collision\ between\ the\ ball\ (circle)\ and\ a\ rectangle.\r\n
numComments=18
